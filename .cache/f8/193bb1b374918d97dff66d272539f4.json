{"id":"main.ts","dependencies":[{"name":"/home/phoenix/Desktop/Projects/Glados-Chamber/package.json","includedInParent":true,"mtime":1588803799732}],"generated":{"js":"var chalk = require('chalk');\nvar ctx = new chalk.Instance({ level: 3 });\nconsole.log(ctx.hex('#000').bold.bgYellow('️ START '), chalk.yellow('Opening chamberlock...\\n'));\n// --- API ---\n// Math results to be the same\nfunction equal(title, value, expected) {\n    if (value === expected) {\n        console.log(chalk.green(' ✔️'), chalk.dim.green(title));\n    }\n    else {\n        console.log(ctx.hex('#000').bold.bgRed('️ ERROR '), chalk.dim.red(title));\n        console.log(chalk.red(' \\t Reason:'), chalk.dim.red(value + \" is not the same as \" + expected + \"\\n\"));\n        process.exit(-1);\n    }\n}\n// Math results to not be the same\nfunction nequal(title, value, expected) {\n    if (value !== expected) {\n        console.log(chalk.green(' ✔️'), chalk.dim.green(title));\n    }\n    else {\n        console.log(ctx.hex('#000').bold.bgRed('️ ERROR '), chalk.dim.red(title));\n        console.log(chalk.red(' \\t Reason:'), chalk.dim.red(value + \" is not the same as \" + expected + \"\\n\"));\n        process.exit(-1);\n    }\n}\n// Test result to return true\nfunction test(title, callback) {\n    var value = callback();\n    if (value) {\n        console.log(chalk.green(' ✔️'), chalk.dim.green(title));\n    }\n    else {\n        console.log(ctx.hex('#000').bold.bgRed('️ ERROR '), chalk.dim.red(title));\n        console.log(chalk.red(' \\t Reason:'), chalk.dim.red(\"Test didn't return true value\\n\"));\n        process.exit(-1);\n    }\n}\n// If codeblock ran well\nfunction succeed(title, callback) {\n    try {\n        callback();\n        console.log(chalk.green(' ✔️'), chalk.dim.green(title));\n    }\n    catch (e) {\n        console.log(ctx.hex('#000').bold.bgRed('️ ERROR '), chalk.dim.red(title));\n        console.log(chalk.red(' \\t Reason:'), chalk.dim.red(\"Executed code didn't succeed\\n\"));\n        process.exit(-1);\n    }\n}\n// If codeblock failed with exception\nfunction fail(title, callback) {\n    try {\n        callback();\n        console.log(ctx.hex('#000').bold.bgRed('️ ERROR '), chalk.dim.red(title));\n        console.log(chalk.red(' \\t Reason:'), chalk.dim.red(\"Executed code didn't fail\\n\"));\n        process.exit(-1);\n    }\n    catch (e) {\n        console.log(chalk.green(' ✔️'), chalk.dim.green(title));\n    }\n}\n// Log information\nfunction log(value) {\n    console.log(chalk.blue(' ℹ'), chalk.dim.blue(value));\n}\n// Prompt a warning\nfunction warn(value) {\n    console.log(chalk.yellow(' ⚠'), chalk.yellow(value));\n}\nprocess.on('exit', function (code) {\n    if (code === 0) {\n        console.log(chalk.green('\\nDone 🎉'));\n        console.log(chalk.green('All tests passed\\n'));\n    }\n});\nconsole.log(process.argv);\n"},"sourceMaps":{"js":{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":"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","sourcesContent":["const chalk = require('chalk')\n\nconst ctx = new chalk.Instance({level: 3})\nconsole.log(ctx.hex('#000').bold.bgYellow('️ START '), chalk.yellow('Opening chamberlock...\\n'))\n\n// --- API ---\n\n// Math results to be the same\nfunction equal(title, value, expected) {\n    if (value === expected) {\n        console.log(chalk.green(' ✔️'), chalk.dim.green(title))\n    }\n    else {\n        console.log(ctx.hex('#000').bold.bgRed('️ ERROR '), chalk.dim.red(title))\n        console.log(chalk.red(' \\t Reason:'), chalk.dim.red(`${value} is not the same as ${expected}\\n`))\n        process.exit(-1)\n    }\n}\n\n// Math results to not be the same\nfunction nequal(title, value, expected) {\n    if (value !== expected) {\n        console.log(chalk.green(' ✔️'), chalk.dim.green(title))\n    }\n    else {\n        console.log(ctx.hex('#000').bold.bgRed('️ ERROR '), chalk.dim.red(title))\n        console.log(chalk.red(' \\t Reason:'), chalk.dim.red(`${value} is not the same as ${expected}\\n`))\n        process.exit(-1)\n    }\n}\n\n// Test result to return true\nfunction test(title, callback) {\n    const value = callback()\n    if (value) {\n        console.log(chalk.green(' ✔️'), chalk.dim.green(title))\n    }\n    else {\n        console.log(ctx.hex('#000').bold.bgRed('️ ERROR '), chalk.dim.red(title))\n        console.log(chalk.red(' \\t Reason:'), chalk.dim.red(`Test didn\\'t return true value\\n`))\n        process.exit(-1)\n    }\n}\n\n// If codeblock ran well\nfunction succeed(title, callback) {\n    try {\n        callback()\n        console.log(chalk.green(' ✔️'), chalk.dim.green(title))\n    }\n    catch (e) {\n        console.log(ctx.hex('#000').bold.bgRed('️ ERROR '), chalk.dim.red(title))\n        console.log(chalk.red(' \\t Reason:'), chalk.dim.red(`Executed code didn\\'t succeed\\n`))\n        process.exit(-1)\n    }\n}\n\n// If codeblock failed with exception\nfunction fail(title, callback) {\n    try {\n        callback()\n        console.log(ctx.hex('#000').bold.bgRed('️ ERROR '), chalk.dim.red(title))\n        console.log(chalk.red(' \\t Reason:'), chalk.dim.red(`Executed code didn\\'t fail\\n`))\n        process.exit(-1)\n    }\n    catch (e) {\n        console.log(chalk.green(' ✔️'), chalk.dim.green(title))\n    }\n}\n\n// Log information\nfunction log(value) {\n    console.log(chalk.blue(' ℹ'), chalk.dim.blue(value))\n}\n\n// Prompt a warning\nfunction warn(value) {\n    console.log(chalk.yellow(' ⚠'), chalk.yellow(value))\n}\n\nprocess.on('exit', (code) => {\n    if (code === 0) {\n        console.log(chalk.green('\\nDone 🎉'))\n        console.log(chalk.green('All tests passed\\n'))\n    }\n})\n\nconsole.log(process.argv)"]}},"error":null,"hash":"2f9a74c9617c385299721231427660bd","cacheData":{"env":{}}}